
public class primeSpiral {
	public static void main(String[] args) {
		int a[][] = new int[10000][10000];
		int k,n = 3, i = 498, j = 499, p = 3;
		a[4999][4999] = 1;
		a[4999][5000] = 2;
		a[4998][5000] = 3;
		a[4998][4999] = 4;
		a[4998][4998] = 5;
		a[4999][4998] = 6;
		a[5000][4998] = 7;
		a[5000][4999] = 8;
		a[5000][5000] = 9; 
		while (n<=100) {
				j++;
				a[i][j] = a[i][j-1] + 1;
				for (k=0; k<n; k++) {
					i--;
					a[i][j] = a[i+1][j] + 1;
				}
				for (k=0; k<n; k++){
					j--;
					a[i][j] = a[i][j+1] +1;
				}
				j--;
				a[i][j] = a[i][j+1] + 1;
				for (k=0; k<n; k++) {
					i++;
					a[i][j] = a[i-1][j] + 1;
				}
				for (k=0; k<n; k++) {
					j++;
					a[i][j] = a[i][j-1] + 1;
				}
				p+=ratio(a,n,i,j);
				System.out.println(n+"  "+p);
				n += 2;
				
		}
		System.out.println("The ratio is below 10% for side length "+n);
	}

	public static double ratio(int a[][], int n, int i, int j) {
		int p = 0;
		if (prime(a[i][j])) p++;
		if (prime(a[i-n+1])) p++;
		if (prime(a[i-n+1][j-n+1])) p++;
		if (prime(a[i][j-n+1])) p++;
		return p;
	}

	public static boolean prime(int a) {
		int j = 3, k = 0;
		if (a == 1)
			return false;
		else if (a == 2)
			return true;
		else {
			while ((k == 0) && (j <= Math.sqrt(a))) {
				if (a % j == 0)
					k++;
				else
					j += 2;
			}
			return (k == 0);
		}
	}
}
